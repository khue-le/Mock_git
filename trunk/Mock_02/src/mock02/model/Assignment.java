package mock02.model;

import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import mock02.model.Course;

/**
 * Assignment generated by hbm2java
 */
@Entity
@Table(name = "assignment", catalog = "hoctructuyen")
public class Assignment implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Integer idAssignment;
	private Course course;
	private String assignmentName;
	private Date openTime;
	private Date deadline;
	private Integer redoTime;
	private String contentAssignment;
	private String attachFileName; 
	private Blob attachFile;
	private String type;
	private Set<Score> scores = new HashSet<Score>();

	public Assignment() {
	}

	public Assignment(Course course, String assignmentName, String contentAssignment, String type) {
		this.course = course;
		this.assignmentName = assignmentName;
		this.contentAssignment = contentAssignment;
		this.type = type;
	}

	public Assignment(Course course, String assignmentName, Date openTime, Date deadline, Integer redoTime,
			String contentAssignment, Blob attachFile, String type, Set<Score> scores) {
		this.course = course;
		this.assignmentName = assignmentName;
		this.openTime = openTime;
		this.deadline = deadline;
		this.redoTime = redoTime;
		this.contentAssignment = contentAssignment;
		this.attachFile = attachFile;
		this.type = type;
		this.scores = scores;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idassignment", unique = true, nullable = false)
	public Integer getIdAssignment() {
		return this.idAssignment;
	}

	public void setIdAssignment(Integer idAssignment) {
		this.idAssignment = idAssignment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcourse", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@Column(name = "assignmentname", nullable = false, length = 200)
	public String getAssignmentName() {
		return this.assignmentName;
	}

	public void setAssignmentName(String assignmentName) {
		this.assignmentName = assignmentName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "opentime", length = 0)
	public Date getOpenTime() {
		return this.openTime;
	}

	public void setOpenTime(Date openTime) {
		this.openTime = openTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deadline", length = 0)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "redotime")
	public Integer getRedoTime() {
		return this.redoTime;
	}

	public void setRedoTime(Integer redoTime) {
		this.redoTime = redoTime;
	}

	@Column(name = "contentassignment", nullable = false, length = 7000)
	public String getContentAssignment() {
		return this.contentAssignment;
	}

	public void setContentAssignment(String contentAssignment) {
		this.contentAssignment = contentAssignment;
	}

	@Column(name = "attachfile")
	public Blob getAttachFile() {
		return this.attachFile;
	}

	public void setAttachFile(Blob attachFile) {
		this.attachFile = attachFile;
	}

	@Column(name = "type", nullable = false, length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(mappedBy = "assignment")
	public Set<Score> getScores() {
		return this.scores;
	}

	public void setScores(Set<Score> scores) {
		this.scores = scores;
	}
	
	@Column(name = "attachfilename")
	public String getAttachFileName() {
		return attachFileName;
	}

	public void setAttachFileName(String attachFileName) {
		this.attachFileName = attachFileName;
	}

}
