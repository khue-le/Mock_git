package mock02.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Lecture generated by hbm2java
 */
@Entity
@Table(name = "lecture", catalog = "hoctructuyen")
public class Lecture implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer idLecture;
	private Subject subject;
	private String lectureName;
	private String description;
	private Set<Resource> resources = new HashSet<Resource>();

	public Lecture() {
	}

	public Lecture(Subject subject, String lectureName) {
		this.subject = subject;
		this.lectureName = lectureName;
	}

	public Lecture(Subject subject, String lectureName, String description, Set<Resource> resources) {
		this.subject = subject;
		this.lectureName = lectureName;
		this.description = description;
		this.resources = resources;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idlecture", unique = true, nullable = false)
	public Integer getIdLecture() {
		return this.idLecture;
	}

	public void setIdLecture(Integer idLecture) {
		this.idLecture = idLecture;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
	@JoinColumn(name = "idsubject", nullable = false)
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	@Column(name = "lecturename", nullable = false, length = 100)
	public String getLectureName() {
		return this.lectureName;
	}

	public void setLectureName(String lectureName) {
		this.lectureName = lectureName;
	}

	@Column(name = "description", length = 300)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lecture", cascade = CascadeType.PERSIST)
	public Set<Resource> getResources() {
		return this.resources;
	}

	public void setResources(Set<Resource> resources) {
		this.resources = resources;
	}

}
